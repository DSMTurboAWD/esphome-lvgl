sensor:

  # Header Outdoor Temperate
  - platform: homeassistant
    entity_id: sensor.office_temperature
    id: office_temperature
    on_value:
      - lvgl.label.update:
          id: temperatures
          text:
            format: "%d째 / %d째"
            args: [ '(int)round(id(outdoor_temperature).state)', '(int)round(x)' ]

  - platform: homeassistant
    entity_id: sensor.outdoor_temperature
    id: outdoor_temperature
    on_value:
      - lvgl.label.update:
          id: temperatures
          text:
            format: "%d째 / %d째"
            args: [ '(int)round(x)', '(int)round(id(office_temperature).state)' ]

  # Office Blind Position
  - platform: homeassistant
    entity_id: cover.office_blind
    id: office_blind_position
    attribute: current_position



binary_sensor:

  # Office Evening Scene
  - platform: homeassistant
    id: office_scene_evening
    entity_id: binary_sensor.office_scene_evening
    trigger_on_initial_state: true
    on_state:
      then:
        lvgl.widget.update:
          id: office_scene_evening_button
          state:
            checked: !lambda return x;

  # Office Dimmed Scene
  - platform: homeassistant
    id: office_scene_dimmed
    entity_id: binary_sensor.office_scene_dimmed
    trigger_on_initial_state: true
    on_state:
      then:
        lvgl.widget.update:
          id: office_scene_dimmed_button
          state:
            checked: !lambda return x;

  # Office Calls Scene
  - platform: homeassistant
    id: office_scene_desk_call
    entity_id: binary_sensor.office_scene_desk_call
    trigger_on_initial_state: true
    on_state:
      then:
        lvgl.widget.update:
          id: office_scene_calls_button
          state:
            checked: !lambda return x;

  # Office Features Scene
  - platform: homeassistant
    id: office_scene_features
    entity_id: binary_sensor.office_scene_features
    trigger_on_initial_state: true
    on_state:
      then:
        lvgl.widget.update:
          id: office_scene_features_button
          state:
            checked: !lambda return x;

  # 3d Printer
  - platform: homeassistant
    id: office_3d_printer_power
    entity_id: switch.office_3d_printer_power
    trigger_on_initial_state: true
    on_state:
      then:
        lvgl.widget.update:
          id: printer_power_button
          state:
            checked: !lambda return x;

  # Office Aircon
  - platform: homeassistant
    id: office_air_conditioner
    entity_id: switch.office_air_conditioner
    trigger_on_initial_state: true
    on_state:
      then:
        lvgl.widget.update:
          id: office_aircon_button
          state:
            checked: !lambda return x;

  # Battery Charger
  - platform: homeassistant
    id: office_battery_charger
    entity_id: switch.d4c5
    trigger_on_initial_state: true
    on_state:
      then:
        lvgl.widget.update:
          id: battery_charger_button
          state:
            checked: !lambda return x;

  # Filament Heater 
  - platform: homeassistant
    id: office_filament_heater
    entity_id: switch.office_filament_heater_893b
    trigger_on_initial_state: true
    on_state:
      then:
        lvgl.widget.update:
          id: filament_heater_button
          state:
            checked: !lambda return x;

  # Office Blind 100% (Open)
  - platform: template
    id: office_blind_100
    lambda: |-
      if (id(office_blind_position).has_state()) {
        return abs(id(office_blind_position).state - 100) <= 3;
      }
      return false;
    on_state:
      then:
        lvgl.widget.update:
          id: office_blind_open_button
          state:
            checked: !lambda return x;

  # Office Blind 66% (Semi Open)
  - platform: template
    id: office_blind_66
    lambda: |-
      if (id(office_blind_position).has_state()) {
        return abs(id(office_blind_position).state - 66) <= 3;
      }
      return false;
    on_state:
      then:
        lvgl.widget.update:
          id: office_blind_66_button
          state:
            checked: !lambda return x;

  # Office Blind 33% (Semi Closed)
  - platform: template
    id: office_blind_33
    lambda: |-
      if (id(office_blind_position).has_state()) {
        return abs(id(office_blind_position).state - 33) <= 3;
      }
      return false;
    on_state:
      then:
        lvgl.widget.update:
          id: office_blind_33_button
          state:
            checked: !lambda return x;

  # Office Blind 0% (Close)
  - platform: template
    id: office_blind_0
    lambda: |-
      if (id(office_blind_position).has_state()) {
        return abs(id(office_blind_position).state - 0) <= 3;
      }
      return false;
    on_state:
      then:
        lvgl.widget.update:
          id: office_blind_close_button
          state:
            checked: !lambda return x;